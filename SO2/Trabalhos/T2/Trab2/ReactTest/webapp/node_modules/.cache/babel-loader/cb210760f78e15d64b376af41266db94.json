{"ast":null,"code":"class JwtClient {\n  constructor() {\n    this.token = \"\";\n    this.token = \"\";\n    this.getToken = this.getToken.bind();\n    this.authenticate = this.authenticate.bind();\n  }\n\n  getToken() {\n    return token;\n  }\n\n  authenticate(username, password) {\n    var body = {\n      username: username,\n      password: password\n    };\n    var myHeaders = new Headers({\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    });\n    fetch(\"https://localhost:8443/login\", {\n      method: \"POST\",\n      headers: myHeaders,\n      mode: \"cors\",\n      cache: \"default\",\n      body: JSON.stringify(body)\n    }).then(response => response.json()).then(token => this.token = token.token);\n  }\n\n}\n\nexport default JwtClient;","map":{"version":3,"sources":["/home/joao/Desktop/so2-2020/T2/Trabalho2-V3.0/webapp/src/Controlers/Jwt.controler.js"],"names":["JwtClient","constructor","token","getToken","bind","authenticate","username","password","body","myHeaders","Headers","fetch","method","headers","mode","cache","JSON","stringify","then","response","json"],"mappings":"AAAA,MAAMA,SAAN,CAAgB;AAGZC,EAAAA,WAAW,GAAG;AAAA,SAFdC,KAEc,GAFN,EAEM;AACV,SAAKA,KAAL,GAAa,EAAb;AAEA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,EAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,EAApB;AACH;;AAEDD,EAAAA,QAAQ,GAAG;AACP,WAAOD,KAAP;AACH;;AAEDG,EAAAA,YAAY,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC7B,QAAIC,IAAI,GAAG;AACPF,MAAAA,QAAQ,EAAEA,QADH;AAEPC,MAAAA,QAAQ,EAAEA;AAFH,KAAX;AAKA,QAAIE,SAAS,GAAG,IAAIC,OAAJ,CAAY;AACxB,sBAAgB;AADQ,KAAZ,CAAhB;AAIAC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAE,MAD0B;AAElCC,MAAAA,OAAO,EAAEJ,SAFyB;AAGlCK,MAAAA,IAAI,EAAE,MAH4B;AAIlCC,MAAAA,KAAK,EAAE,SAJ2B;AAKlCP,MAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AAL4B,KAAjC,CAAL,CAOKU,IAPL,CAOWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPxB,EAQKF,IARL,CAQWhB,KAAD,IAAY,KAAKA,KAAL,GAAaA,KAAK,CAACA,KARzC;AASH;;AAjCW;;AAoChB,eAAeF,SAAf","sourcesContent":["class JwtClient {\n    token = \"\";\n\n    constructor() {\n        this.token = \"\";\n\n        this.getToken = this.getToken.bind();\n        this.authenticate = this.authenticate.bind();\n    }\n\n    getToken() {\n        return token;\n    }\n\n    authenticate(username, password) {\n        var body = {\n            username: username,\n            password: password,\n        };\n\n        var myHeaders = new Headers({\n            \"Content-Type\": \"application/json;charset=utf-8\",\n        });\n\n        fetch(\"https://localhost:8443/login\", {\n            method: \"POST\",\n            headers: myHeaders,\n            mode: \"cors\",\n            cache: \"default\",\n            body: JSON.stringify(body),\n        })\n            .then((response) => response.json())\n            .then((token) => (this.token = token.token));\n    }\n}\n\nexport default JwtClient;\n"]},"metadata":{},"sourceType":"module"}